import java.util.InputMismatchException;
// import allows me to use more functions from libraries that I am including
import java.util.Scanner;

// Brenden Rathgeber

// Integration Project Calculator

// Integration Project
public class Main {
  // Class = code


  /**
   * this is the switch statement that takes you to different functions
   * 
   * @param args
   */

  public static void main(String[] args) { // this is a header. public is an access modifier.
    Scanner scanner = new Scanner(System.in);
    System.out.println(
        "Hello! I calculate commonly used formulas for you. Press " + "enter to get started.");
    scanner.nextLine();
    boolean continueProgram = true;
    while (continueProgram == true) {
      System.out.println("\nPlease enter the number coresponding to the field "
    + "that you want to use:"); // my greeting

      System.out.println((int) 2.0 / 2 + ": Circle");
      System.out.println("2: Ellipse");
      System.out.println("3: Sphere");
      System.out.println("4: Square");
      System.out.println("5: Cube");
      System.out.println("6: Your Body Mass Index (BMI)");
      System.out.println("7: Amortization Amount on a Bond");
      System.out.println("8: Factors List");
      System.out.println("9: Creator Credits");
      System.out.println("10: Creator Credits");
      int choice = 0;
      boolean runInput = true;
      while (runInput == true) {
        try {
          choice = scanner.nextInt();
          break;
        } catch (InputMismatchException ex) {
          System.out.println("Invalid input. Please try one of the menu options. ");
          scanner.nextLine();
        }
      }
      switch (choice) {

        case 1:
          Circle.measureCircle(scanner);
          break;

        case 2:
          Ellipse.ellipseCalculator(scanner);
          break;

        case 3:
          Sphere.measureSphere(scanner);
          break;

        case 4:
          Square.measureSquare(scanner);
          break;

        case 5:
          Cube.measureCube(scanner);
          break;

        case 6:
          BodyMassIndex.findBodyMassIndex(scanner);
          break;

        case 7:
          LoanAmortization.findLoanAmortization(scanner);
          break;

        case 8:
          Factor.findFactors(scanner);
          break;

        case 9:
          System.out.println("Made by Brenden Rathgeber in COP 2006 in 2019.");
          break;

        case 10:
          System.out.println("Are you sure you would like to terminate program? (Y/N)");
          boolean goodInput = false;
          while (goodInput == false) {
            String terminateInput = scanner.nextLine();
            try {
              if (terminateInput.equals("N")) {
                goodInput = true;
              } else if (terminateInput.equals("Y")) {
                System.exit(0);
              }
            } catch (Exception e) {
              System.out.println("Invalid input.");
              scanner.nextLine();
            }

          }
          break;

        default:
          System.out.println("Invalid Input. Please try again.\n");

      }
    }
  }
}

// method is a group of statements grouped together to complete a task
// argument is whart you put in a call kinda like how you put a parameter in a header

/*
 * while 14, switch 29, if 141, else if 143, else 145, break 33, math class in Circle.java, return
 * in every class made,
 * 
 * scope: everything in this 'void main only applies to itself. another 'void' will need to have its
 * saved values redeclared. Variables declared out of the 'void are called 'global' and are not
 * recommended for use. Variables are spaces in memory for values. All primitive data types have
 * their own class datatypes: int, long, short, float,
 */
// inheritance is useful for not having to use extra ram and typing time on classes with
// similarities. ex. circle and sphere both have a radius
/*
 * In Java, we have eight primitive data types: boolean: true and false char: one character byte:
 * whole numbers ranging from -128 and 127. short: whole numbers ranging from -32,768 to 32767 int:
 * whole numbers ranging from -2,147,483,648 to 2,147,483,647 long: whole numbers ranging from
 * -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807. float: value that holds 6 to 7 decimal
 * digits double: all numbers with decimal points up to 15 digits
 */

/*
 * scope: everything in this 'void main only applies to itself. another 'void' will need to have its
 * saved values redeclared. Variables declared out of the 'void are called 'global' and are not
 * recommended for use. Variables are spaces in memory for values.
 */

// casting is changing the datatype from one type to another. i use it on line 22
// i use escape sequence on 19 (a shortcut for new line and tab and other stuff like that

// hi :)
